name: CI/CD with NGINX and Docker Compose

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: nginx-app
  IMAGE_TAG: latest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3

    - name: üß† Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: üê≥ Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: üì¶ Build and Push Docker image
      run: |
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx create --use
        docker buildx build \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG \
          --push .

    - name: üîê Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: üöÄ Deploy with Docker Compose on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          echo "üì¶ Pulling latest app image"
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nginx-app:latest

          echo "üßπ Stopping old containers"
          docker-compose -f /home/ubuntu/github-action-nginx/docker-compose.yml down || true

          echo "üöÄ Starting new containers"
          docker-compose -f /home/ubuntu/github-action-nginx/docker-compose.yml up -d --force-recreate
        EOF
